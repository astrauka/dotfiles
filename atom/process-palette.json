{
  "patterns": {
    "P1": {
      "expression": "(path):(line)"
    },
    "P2": {
      "expression": "(path)\\s+(line)",
      "path": "(?:\\/[\\w\\.\\-]+)+"
    }
  },
  "commands": [
    {
      "namespace": "Process Palette",
      "action": "ripper-tags",
      "command": "~/.rbenv/shims/ripper-tags -f .tags -R .",
      "arguments": [],
      "cwd": "{projectPath}",
      "inputDialogs": [],
      "env": {},
      "keystroke": "ctrl-t ctrl-t",
      "stream": false,
      "outputTarget": "panel",
      "outputBufferSize": 80000,
      "maxCompleted": 3,
      "autoShowOutput": false,
      "autoHideOutput": false,
      "scrollLockEnabled": false,
      "singular": true,
      "promptToSave": false,
      "saveOption": "none",
      "patterns": [
        "default"
      ],
      "successOutput": "{stdout}",
      "errorOutput": "{stdout}\n{stderr}",
      "fatalOutput": "Failed to execute : {fullCommand}\n{stdout}\n{stderr}",
      "successMessage": "Executed : {fullCommand}",
      "errorMessage": "Executed : {fullCommand}\nReturned with code {exitStatus}\n{stderr}",
      "fatalMessage": "Failed to execute : {fullCommand}\n{stdout}\n{stderr}"
    },
    {
      "namespace": "Process Palette",
      "action": "graphviz dot build",
      "command": "/usr/bin/dot -Tpng {filePath} -o {fileDirPath}/{fileName}.png",
      "arguments": [],
      "cwd": null,
      "inputDialogs": [],
      "env": {},
      "keystroke": "alt-shift-d",
      "stream": false,
      "outputTarget": "panel",
      "outputBufferSize": 80000,
      "maxCompleted": 1,
      "autoShowOutput": false,
      "autoHideOutput": true,
      "scrollLockEnabled": false,
      "singular": true,
      "promptToSave": false,
      "saveOption": "referenced",
      "patterns": [
        "default"
      ],
      "successOutput": "{stdout}",
      "errorOutput": "{stdout}\n{stderr}",
      "fatalOutput": "Failed to execute : {fullCommand}\n{stdout}\n{stderr}",
      "successMessage": null,
      "errorMessage": "Executed : {fullCommand}\nReturned with code {exitStatus}\n{stderr}",
      "fatalMessage": "Failed to execute : {fullCommand}\n{stdout}\n{stderr}"
    }
  ]
}